How to Use 2-matrix_divided.py
==============================

This module defines a matrix division function ``matrix_divided(matrix, div)``.

Usage
=====

``matrix_divided(...)`` returns a new matrix that is a copy of the parameter
``matrix`` with all elements divided by ``div``.

::

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix = [
    ...     [4, 8, 12],
    ...     [16, 20, 24]
    ... ]
    >>> print(matrix_divided(matrix, 4))
    [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

Note that quotients are rounded to a maximum of two decimal places.

::

    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

The original matrix is left unchanged.

::

    >>> print(matrix)
    [[1, 2, 3], [4, 5, 6]]

The function can also handle floating-point numbers.

::

    >>> matrix = [
    ...     [1.2, -2.4, 3.6],
    ...     [4.8, 6.0, -7.2]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    [[0.4, -0.8, 1.2], [1.6, 2.0, -2.4]]

Integers and floats can be combined.

::

    >>> matrix = [
    ...     [1, -2.4, 3, 4.8, 5],
    ...     [-6.0, 7.2, 8, 9.6, 10]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, -0.8, 1.0, 1.6, 1.67], [-2.0, 2.4, 2.67, 3.2, 3.33]]

Invalid Matrices
==============

The parameter ``matrix`` must be a list of lists consisting of either ints or
floats. If ``matrix`` is not a list, a TypeError is raised.

::

    >>> matrix = "not a list"
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

...

### Additional Notes

- **Floating-Point Operations**: The function can handle floating-point numbers and combinations of integers and floats.
- **Round-off**: Results are rounded to two decimal places.

### Example Usages

The examples cover a wide range of scenarios, including valid and invalid matrices, different types of divisors, and handling edge cases such as zero division.

Overall, the documentation provides clear guidance on how to use the function and what to expect in terms of behavior and error handling. It's a comprehensive reference for users implementing or interacting with the `matrix_divided` function.
